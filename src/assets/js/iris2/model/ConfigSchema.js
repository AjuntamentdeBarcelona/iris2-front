/**
 * Special schemas for editing configurations.
 */
export default {
  fieldMap: {
    ACUSAMENT_REBUT_CAT: 'textarea',
    ACUSAMENT_REBUT_CAST: 'textarea',
    ACUSAMENT_REBUT_ANG: 'textarea',
    ACUSAMENT_MULTI_CAT: 'textarea',
    ACUSAMENT_MULTI_CAST: 'textarea',
    ACUSAMENT_MULTI_ANG: 'textarea',
    TEXTCIMAIL_CAT: 'textarea',
    TEXTCIMAIL_CAST: 'textarea',
    TEXTCIMAIL_ANG: 'textarea',
    TEXTCISMS_CAT: 'textarea',
    TEXTCISMS_CAST: 'textarea',
    TEXTCISMS_ANG: 'textarea',
    TEXTCIMAIL_SOLICITA_CAST: 'textarea',
    TEXTCIMAIL_SOLICITA_CAT: 'textarea',
    TEXTCIMAIL_SOLICITA_ANG: 'textarea',
    NO_RESPONDRE_MAIL_CAST: 'textarea',
    NO_RESPONDRE_MAIL_CAT: 'textarea',
    NO_RESPONDRE_MAIL_ANG: 'textarea',
    PLANTILLA_DERIVACIO_EXTERNA: 'textarea',
    TEXT_LOPD_CAST: 'textarea',
    TEXT_LOPD_CAT: 'textarea',
    TEXT_LOPD_ABD: 'textarea',
    TEXTCARTACAP_CAST: 'textarea',
    TEXTCARTACAP: 'textarea',
    TEXTCARTA_ANG: 'textarea',
    URL_RECLAMA_QUEIXES_CAST: 'textarea',
    URL_RECLAMA_QUEIXES_CAT: 'textarea',
    URL_RECLAMA_QUEIXES_ANG: 'textarea',
    TEXTCARTAFI: 'textarea',
    TEXTCARTAFI_CAST: 'textarea',
    TEXTCARTAFI_ANG: 'textarea',
    DISCULPES_RETARD_CAT: 'textarea',
    DISCULPES_RETARD_CAST: 'textarea',
    DISCULPES_RETARD_ANG: 'textarea',
    TEXTCARTASIGNATURA_CAST: 'textarea',
    TEXTCARTASIGNATURA_ANG: 'textarea',
    TEXTCARTASIGNATURA: 'textarea',
    DATA_HORA_CITA_PREVIA: 'textarea',
    DATA_HORA_CITA_PREVIA_CAST: 'textarea',
    DATA_HORA_CITA_PREVIA_ANG: 'textarea',
    WEB_LOPD_ANG: 'textarea',
    WEB_LOPD_CAST: 'textarea',
    WEB_LOPD_CAT: 'textarea',
    DEMANAR_FITXA: 'cancelReason',
    REABRIR_CADUCIDAD: 'cancelReason',
    RECLAMA_TIPUS_RESOLUCIO: 'resolutionType',
    PEU_CONSULTES_CAST: 'textarea',
    PEU_CONSULTES_CAT: 'textarea',
    PEU_CONSULTES_ANG: 'textarea',
  },
  textarea: {
    type: 'textArea',
  },
  reassignReason: {
    type: 'vuex-select',
    storeModule: 'masters',
    storeAttribute: 'reassignReasons',
    storeAction: 'retrieveReassignReasons',
    required: true,
    styleClasses: 'col-12',
    objectValue: false,
    valueAttribute: 'id',
  },
  cancelReason: {
    type: 'vuex-select',
    storeModule: 'masters',
    storeAttribute: 'cancelReasons',
    storeAction: 'retrieveCancelReasons',
    required: true,
    styleClasses: 'col-12',
    objectValue: false,
    valueAttribute: 'id',
  },
  resolutionType: {
    type: 'vuex-select',
    storeModule: 'masters',
    storeAttribute: 'resolutionTypes',
    storeAction: 'retrieveResolutionTypes',
    optionLabelAttribute: 'description',
    valueAttribute: 'id',
    required: true,
  },
  getSchema(parameter) {
    if (this.fieldMap[parameter.parameter] != null) {
      const fieldType = this.fieldMap[parameter.parameter]
      return { ...this[fieldType] }
    }
    return {
      model: 'value',
      type: 'input',
      inputType: parameter.tipus_data ? 'date' : 'text',
    }
  },
}
